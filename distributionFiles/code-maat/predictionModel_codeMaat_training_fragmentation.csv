Invalid argument:  git: Failed to parse the given file - is it a valid logfile?
This is Code Maat, a program used to collect statistics from a VCS.
Version: 0.9.2-SNAPSHOT

Usage: program-name -l log-file [options]

Options:
  -l, --log LOG                                         Log file with input data
  -c, --version-control VCS                             Input vcs module type: supports svn, git, git2, hg, or p4
  -a, --analysis ANALYSIS                      authors  The analysis to run (abs-churn, age, author-churn, authors, communication, coupling, entity-churn, entity-effort, entity-ownership, fragmentation, identity, main-dev, main-dev-by-revs, messages, refactoring-main-dev, revisions, soc, summary)
      --input-encoding INPUT-ENCODING                   Specify an encoding other than UTF-8 for the log file
  -r, --rows ROWS                                       Max rows in output
  -o, --outfile OUTFILE                                 Write the result to the given file name
  -g, --group GROUP                                     A file with a pre-defined set of layers. The data will be aggregated according to the group of layers.
  -n, --min-revs MIN-REVS                      5        Minimum number of revisions to include an entity in the analysis
  -m, --min-shared-revs MIN-SHARED-REVS        5        Minimum number of shared revisions to include an entity in the analysis
  -i, --min-coupling MIN-COUPLING              30       Minimum degree of coupling (in percentage) to consider
  -x, --max-coupling MAX-COUPLING              100      Maximum degree of coupling (in percentage) to consider
  -s, --max-changeset-size MAX-CHANGESET-SIZE  30       Maximum number of modules in a change set if it shall be included in a coupling analysis
  -e, --expression-to-match MATCH-EXPRESSION            A regex to match against commit messages. Used with -messages analyses
  -t, --temporal-period TEMPORAL-PERIOD                 Instructs Code Maat to consider all commits during the same day as a single, logical commit
  -d, --age-time-now AGE-TIME_NOW                       Specify a date as YYYY-MM-dd that counts as time zero when doing a code age analysis
  -h, --help
Please refer to the manual page for more information.
